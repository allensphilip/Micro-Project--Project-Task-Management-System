{"version":3,"sources":["utils.js","detector.js","node.js","navbar-darken-on-scroll.js","swiper.js","theme.js"],"names":["docReady","fn","document","readyState","addEventListener","setTimeout","resize","window","isIterableArray","array","Array","isArray","length","camelize","str","text","replace","_","c","toUpperCase","substr","toLowerCase","getData","el","data","JSON","parse","dataset","e","hexToRgb","hexValue","hex","indexOf","substring","shorthandRegex","result","exec","m","r","g","b","parseInt","rgbaColor","color","alpha","colors","primary","secondary","success","info","warning","danger","light","dark","grays","white","black","hasClass","className","classList","value","includes","addClass","add","getOffset","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","top","left","isScrolledIntoView","offsetTop","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","all","innerHeight","innerWidth","partial","breakpoints","xs","sm","md","lg","xl","xxl","getBreakpoint","classes","breakpoint","split","filter","cls","pop","setCookie","name","expire","expires","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","match","settings","tinymce","theme","chart","borderColor","newChart","config","ctx","getContext","Chart","getItemFromStore","key","defaultValue","store","localStorage","getItem","setItemToStore","payload","setItem","getStoreSpace","parseFloat","escape","encodeURIComponent","stringify","toFixed","utils","detectorInit","is","html","querySelector","opera","mobile","firefox","safari","ios","iphone","ipad","ie","edge","chrome","mac","windows","navigator","userAgent","DomNode","node","isValidNode","remove","toggle","contains","setAttribute","removeAttribute","event","cb","navbarInit","Selector","NAVBAR","NAVBAR_COLLAPSE","NAVBAR_TOGGLER","ClassNames","COLLAPSED","Events","SCROLL","SHOW_BS_COLLAPSE","HIDE_BS_COLLAPSE","HIDDEN_BS_COLLAPSE","DataKey","NAVBAR_ON_SCROLL","navbar","windowHeight","navbarCollapse","allColors","colorName","Object","keys","bgClassName","shadowName","colorRgb","getComputedStyle","backgroundImage","transition","style","backgroundColor","breakPoint","swiperInit","swipers","querySelectorAll","navbarVerticalToggle","forEach","swiper","options","thumbsOptions","thumb","thumbsInit","thumbImages","slides","img","src","thumbs","createElement","innerHTML","parent","parentNode","appendChild","Swiper","newSwiper","update"],"mappings":"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","file":"theme.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                    Utils                                   */\r\n/* -------------------------------------------------------------------------- */\r\nconst docReady = (fn) => {\r\n  // see if DOM is already available\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', fn);\r\n  } else {\r\n    setTimeout(fn, 1);\r\n  }\r\n};\r\n\r\nconst resize = (fn) => window.addEventListener('resize', fn);\r\n\r\nconst isIterableArray = (array) => Array.isArray(array) && !!array.length;\r\n\r\nconst camelize = (str) => {\r\n  const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) =>\r\n    c ? c.toUpperCase() : ''\r\n  );\r\n  return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\r\n};\r\n\r\nconst getData = (el, data) => {\r\n  try {\r\n    return JSON.parse(el.dataset[camelize(data)]);\r\n  } catch (e) {\r\n    return el.dataset[camelize(data)];\r\n  }\r\n};\r\n\r\n/* ----------------------------- Colors function ---------------------------- */\r\n\r\nconst hexToRgb = (hexValue) => {\r\n  let hex;\r\n  hexValue.indexOf('#') === 0\r\n    ? (hex = hexValue.substring(1))\r\n    : (hex = hexValue);\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\r\n    hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b)\r\n  );\r\n  return result\r\n    ? [\r\n      parseInt(result[1], 16),\r\n      parseInt(result[2], 16),\r\n      parseInt(result[3], 16),\r\n    ]\r\n    : null;\r\n};\r\n\r\nconst rgbaColor = (color = '#fff', alpha = 0.5) =>\r\n  `rgba(${hexToRgb(color)}, ${alpha})`;\r\n\r\n/* --------------------------------- Colors --------------------------------- */\r\n\r\nconst colors = {\r\n  primary: '#5EDCD4',\r\n  secondary: '#748194',\r\n  success: '#00d27a',\r\n  info: '#27bcfd',\r\n  warning: '#f5803e',\r\n  danger: '#e63757',\r\n  light: '#f9fafd',\r\n  dark: '#0A2640',\r\n};\r\n\r\nconst grays = {\r\n  white: '#fff',\r\n  100: '#f9fafd',\r\n  200: '#edf2f9',\r\n  300: '#d8e2ef',\r\n  400: '#b6c1d2',\r\n  500: '#9da9bb',\r\n  600: '#748194',\r\n  700: '#5e6e82',\r\n  800: '#4d5969',\r\n  900: '#344050',\r\n  1000: '#232e3c',\r\n  1100: '#0b1727',\r\n  black: '#000',\r\n};\r\n\r\nconst hasClass = (el, className) => {\r\n  !el && false;\r\n  return el.classList.value.includes(className);\r\n};\r\n\r\nconst addClass = (el, className) => {\r\n  el.classList.add(className);\r\n};\r\n\r\nconst getOffset = (el) => {\r\n  const rect = el.getBoundingClientRect();\r\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n};\r\n\r\nconst isScrolledIntoView = (el) => {\r\n  let top = el.offsetTop;\r\n  let left = el.offsetLeft;\r\n  const width = el.offsetWidth;\r\n  const height = el.offsetHeight;\r\n\r\n  while (el.offsetParent) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    el = el.offsetParent;\r\n    top += el.offsetTop;\r\n    left += el.offsetLeft;\r\n  }\r\n\r\n  return {\r\n    all:\r\n      top >= window.pageYOffset &&\r\n      left >= window.pageXOffset &&\r\n      top + height <= window.pageYOffset + window.innerHeight &&\r\n      left + width <= window.pageXOffset + window.innerWidth,\r\n    partial:\r\n      top < window.pageYOffset + window.innerHeight &&\r\n      left < window.pageXOffset + window.innerWidth &&\r\n      top + height > window.pageYOffset &&\r\n      left + width > window.pageXOffset,\r\n  };\r\n};\r\n\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1540,\r\n};\r\n\r\nconst getBreakpoint = (el) => {\r\n  const classes = el && el.classList.value;\r\n  let breakpoint;\r\n  if (classes) {\r\n    breakpoint =\r\n      breakpoints[\r\n      classes\r\n        .split(' ')\r\n        .filter((cls) => cls.includes('navbar-expand-'))\r\n        .pop()\r\n        .split('-')\r\n        .pop()\r\n      ];\r\n  }\r\n  return breakpoint;\r\n};\r\n\r\n/* --------------------------------- Cookie --------------------------------- */\r\n\r\nconst setCookie = (name, value, expire) => {\r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + expire);\r\n  document.cookie = name + '=' + value + ';expires=' + expires.toUTCString();\r\n};\r\n\r\nconst getCookie = (name) => {\r\n  var keyValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n  return keyValue ? keyValue[2] : keyValue;\r\n};\r\n\r\nconst settings = {\r\n  tinymce: {\r\n    theme: 'oxide',\r\n  },\r\n  chart: {\r\n    borderColor: 'rgba(255, 255, 255, 0.8)',\r\n  },\r\n};\r\n\r\n/* -------------------------- Chart Initialization -------------------------- */\r\n\r\nconst newChart = (chart, config) => {\r\n  const ctx = chart.getContext('2d');\r\n  return new window.Chart(ctx, config);\r\n};\r\n\r\n/* ---------------------------------- Store --------------------------------- */\r\n\r\nconst getItemFromStore = (key, defaultValue, store = localStorage) => {\r\n  try {\r\n    return JSON.parse(store.getItem(key)) || defaultValue;\r\n  } catch {\r\n    return store.getItem(key) || defaultValue;\r\n  }\r\n};\r\n\r\nconst setItemToStore = (key, payload, store = localStorage) =>\r\n  store.setItem(key, payload);\r\nconst getStoreSpace = (store = localStorage) =>\r\n  parseFloat(\r\n    (\r\n      escape(encodeURIComponent(JSON.stringify(store))).length /\r\n      (1024 * 1024)\r\n    ).toFixed(2)\r\n  );\r\n\r\nconst utils = {\r\n  docReady,\r\n  resize,\r\n  isIterableArray,\r\n  camelize,\r\n  getData,\r\n  hasClass,\r\n  addClass,\r\n  hexToRgb,\r\n  rgbaColor,\r\n  colors,\r\n  grays,\r\n  getOffset,\r\n  isScrolledIntoView,\r\n  getBreakpoint,\r\n  setCookie,\r\n  getCookie,\r\n  newChart,\r\n  settings,\r\n  getItemFromStore,\r\n  setItemToStore,\r\n  getStoreSpace,\r\n};\r\nexport default utils;\r\n","import { addClass } from './utils';\r\n/* -------------------------------------------------------------------------- */\r\n/*                                  Detector                                  */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nconst detectorInit = () => {\r\n  const { is } = window;\r\n  const html = document.querySelector('html');\r\n\r\n  is.opera() && addClass(html, 'opera');\r\n  is.mobile() && addClass(html, 'mobile');\r\n  is.firefox() && addClass(html, 'firefox');\r\n  is.safari() && addClass(html, 'safari');\r\n  is.ios() && addClass(html, 'ios');\r\n  is.iphone() && addClass(html, 'iphone');\r\n  is.ipad() && addClass(html, 'ipad');\r\n  is.ie() && addClass(html, 'ie');\r\n  is.edge() && addClass(html, 'edge');\r\n  is.chrome() && addClass(html, 'chrome');\r\n  is.mac() && addClass(html, 'osx');\r\n  is.windows() && addClass(html, 'windows');\r\n  navigator.userAgent.match('CriOS') && addClass(html, 'chrome');\r\n};\r\n\r\nexport default detectorInit;\r\n","/*-----------------------------------------------\r\n|   DomNode\r\n-----------------------------------------------*/\r\nclass DomNode {\r\n  constructor(node) {\r\n    this.node = node;\r\n  }\r\n\r\n  addClass(className) {\r\n    this.isValidNode() && this.node.classList.add(className);\r\n  }\r\n\r\n  removeClass(className) {\r\n    this.isValidNode() && this.node.classList.remove(className);\r\n  }\r\n\r\n  toggleClass(className) {\r\n    this.isValidNode() && this.node.classList.toggle(className);\r\n  }\r\n\r\n  hasClass(className) {\r\n    this.isValidNode() && this.node.classList.contains(className);\r\n  }\r\n\r\n  data(key) {\r\n    if (this.isValidNode()) {\r\n      try {\r\n        return JSON.parse(this.node.dataset[this.camelize(key)]);\r\n      } catch (e) {\r\n        return this.node.dataset[this.camelize(key)];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  attr(name) {\r\n    return this.isValidNode() && this.node[name];\r\n  }\r\n\r\n  setAttribute(name, value) {\r\n    this.isValidNode() && this.node.setAttribute(name, value);\r\n  }\r\n\r\n  removeAttribute(name) {\r\n    this.isValidNode() && this.node.removeAttribute(name);\r\n  }\r\n\r\n  setProp(name, value) {\r\n    this.isValidNode() && (this.node[name] = value);\r\n  }\r\n\r\n  on(event, cb) {\r\n    this.isValidNode() && this.node.addEventListener(event, cb);\r\n  }\r\n\r\n  isValidNode() {\r\n    return !!this.node;\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  camelize(str) {\r\n    const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\r\n    return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\r\n  }\r\n}\r\n\r\nexport default DomNode;\r\n","import utils from \"./utils\";\r\n/*-----------------------------------------------\r\n|   Top navigation opacity on scroll\r\n-----------------------------------------------*/\r\nconst navbarInit = () => {\r\n  const Selector = {\r\n    NAVBAR: \"[data-navbar-on-scroll]\",\r\n    NAVBAR_COLLAPSE: \".navbar-collapse\",\r\n    NAVBAR_TOGGLER: \".navbar-toggler\",\r\n  };\r\n\r\n  const ClassNames = {\r\n    COLLAPSED: \"collapsed\",\r\n  };\r\n\r\n  const Events = {\r\n    SCROLL: \"scroll\",\r\n    SHOW_BS_COLLAPSE: \"show.bs.collapse\",\r\n    HIDE_BS_COLLAPSE: \"hide.bs.collapse\",\r\n    HIDDEN_BS_COLLAPSE: \"hidden.bs.collapse\",\r\n  };\r\n\r\n  const DataKey = {\r\n    NAVBAR_ON_SCROLL: \"navbar-light-on-scroll\",\r\n  };\r\n\r\n  const navbar = document.querySelector(Selector.NAVBAR);\r\n\r\n  if (navbar) {\r\n    const windowHeight = window.innerHeight;\r\n    const html = document.documentElement;\r\n    const navbarCollapse = navbar.querySelector(Selector.NAVBAR_COLLAPSE);\r\n    const allColors = { ...utils.colors, ...utils.grays };\r\n\r\n    const name = utils.getData(navbar, DataKey.NAVBAR_ON_SCROLL);\r\n    const colorName = Object.keys(allColors).includes(name) ? name : \"dark\";\r\n    const color = allColors[colorName];\r\n    const bgClassName = `bg-${colorName}`;\r\n    const shadowName = \"shadow-transition\";\r\n    const colorRgb = utils.hexToRgb(color);\r\n    const { backgroundImage } = window.getComputedStyle(navbar);\r\n    const transition = \"background-color 0.35s ease\";\r\n    navbar.style.backgroundImage = \"none\";\r\n\r\n    // Change navbar background color on scroll\r\n    window.addEventListener(Events.SCROLL, () => {\r\n      const { scrollTop } = html;\r\n      let alpha = (scrollTop / windowHeight) * 5;\r\n      alpha >= 1 && (alpha = 1);\r\n      navbar.style.backgroundColor = `rgba(${colorRgb[0]}, ${colorRgb[1]}, ${colorRgb[2]}, ${alpha})`;\r\n      navbar.style.backgroundImage =\r\n        alpha > 0 || utils.hasClass(navbarCollapse, \"show\")\r\n          ? backgroundImage\r\n          : \"none\";\r\n      alpha > 0 || utils.hasClass(navbarCollapse, \"show\")\r\n        ? navbar.classList.add(shadowName)\r\n        : navbar.classList.remove(shadowName);\r\n    });\r\n\r\n    // Toggle bg class on window resize\r\n    utils.resize(() => {\r\n      const breakPoint = utils.getBreakpoint(navbar);\r\n      if (window.innerWidth > breakPoint) {\r\n        navbar.style.backgroundImage = html.scrollTop\r\n          ? backgroundImage\r\n          : \"none\";\r\n        navbar.style.transition = \"none\";\r\n      } else if (\r\n        !utils.hasClass(\r\n          navbar.querySelector(Selector.NAVBAR_TOGGLER),\r\n          ClassNames.COLLAPSED\r\n        )\r\n      ) {\r\n        navbar.classList.add(bgClassName);\r\n        navbar.classList.add(shadowName);\r\n        navbar.style.backgroundImage = backgroundImage;\r\n      }\r\n\r\n      if (window.innerWidth <= breakPoint) {\r\n        navbar.style.transition = utils.hasClass(navbarCollapse, \"show\")\r\n          ? transition\r\n          : \"none\";\r\n      }\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.SHOW_BS_COLLAPSE, () => {\r\n      navbar.classList.add(bgClassName);\r\n      navbar.classList.add(shadowName);\r\n      navbar.style.backgroundImage = backgroundImage;\r\n      navbar.style.transition = transition;\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.HIDE_BS_COLLAPSE, () => {\r\n      navbar.classList.remove(bgClassName);\r\n      navbar.classList.remove(shadowName);\r\n      !html.scrollTop && (navbar.style.backgroundImage = \"none\");\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.HIDDEN_BS_COLLAPSE, () => {\r\n      navbar.style.transition = \"none\";\r\n    });\r\n  }\r\n};\r\n\r\nexport default navbarInit;\r\n","import utils from './utils';\r\n\r\n/*-----------------------------------------------\r\n|  Swiper\r\n-----------------------------------------------*/\r\nconst swiperInit = () => {\r\n  const swipers = document.querySelectorAll('[data-swiper]');\r\n  const navbarVerticalToggle = document.querySelector(\r\n    '.navbar-vertical-toggle'\r\n  );\r\n  swipers.forEach((swiper) => {\r\n    const options = utils.getData(swiper, 'swiper');\r\n    const thumbsOptions = options.thumb;\r\n    let thumbsInit;\r\n    if (thumbsOptions) {\r\n      const thumbImages = swiper.querySelectorAll('img');\r\n      let slides = '';\r\n      thumbImages.forEach((img) => {\r\n        slides += `\r\n          <div class='swiper-slide '>\r\n            <img class='img-fluid rounded mt-1' src=${img.src} alt=''/>\r\n          </div>\r\n        `;\r\n      });\r\n\r\n      const thumbs = document.createElement('div');\r\n      thumbs.setAttribute('class', 'swiper-container thumb');\r\n      thumbs.innerHTML = `<div class='swiper-wrapper'>${slides}</div>`;\r\n\r\n      if (thumbsOptions.parent) {\r\n        const parent = document.querySelector(thumbsOptions.parent);\r\n        parent.parentNode.appendChild(thumbs);\r\n      } else {\r\n        swiper.parentNode.appendChild(thumbs);\r\n      }\r\n\r\n      thumbsInit = new window.Swiper(thumbs, thumbsOptions);\r\n    }\r\n\r\n    // const swiperNav = swiper.querySelector('.swiper-nav');\r\n    const newSwiper = new window.Swiper(swiper, {\r\n      ...options,\r\n      thumbs: {\r\n        swiper: thumbsInit,\r\n      },\r\n    });\r\n    if (navbarVerticalToggle) {\r\n      navbarVerticalToggle.addEventListener('navbar.vertical.toggle', () => {\r\n        newSwiper.update();\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default swiperInit;\r\n","import { docReady } from './utils';\r\nimport detectorInit from './detector';\r\nimport swiperInit from './swiper';\r\nimport navbarInit from \"./navbar-darken-on-scroll\";\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                            Theme Initialization                            */\r\n/* -------------------------------------------------------------------------- */\r\ndocReady(detectorInit);\r\ndocReady(swiperInit);\r\ndocReady(navbarInit)\r\n"]}